local data = require ("main.data")

function init(self)
	self.scan = 0
	self.levelurl = string.format("level%d:/level#tilemap", data.level)
	self.hold = 5
end

function update(self, dt)
	if self.hold > 0 then
		self.hold = self.hold - 1
		return
	end

	local p2 = vmath.vector3(0,0,0)

	for a = self.scan, self.scan + math.pi, 0.5 do
		
		p2.x = (100*math.sin(a)) + data.playerpos.x
		p2.y = (100*math.cos(a)) + data.playerpos.y
		
		lineofsight(self, data.playerpos, p2)
		self.scan = a
		
	end
end

function lineofsight(self, p1, p2)
	local v = p2 - p1
	local len = math.sqrt((v.x * v.x) + (v.y * v.y))
	
	v.x = (v.x / len) * 10
	v.y = (v.y / len) * 10
		
	local p = p1 + v
	local c = false
	local s = 0
	
	while c == false and s < 15 do
		p.x = p.x + v.x
		p.y = p.y + v.y

		local t = data.gettile(self, p.x, p.y, "world")
		if t >= 280 then
			c = true
		end

		data.settile(self, p.x, p.y, "fog", 0)

		s = s + 1
	end
	
	--msg.post("@render:", "draw_line", { start_point = p1, end_point = p, color = vmath.vector4(1, 1, 1, 1) } )
end
