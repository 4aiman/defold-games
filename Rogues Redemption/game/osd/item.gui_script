local data = require ("main.data")
local items = require ("game/items.items")

function init(self)
	self.viewitem = 1
	self.viewslot = 1
	gui.set_color(gui.get_node("textbg"), vmath.vector4(1,1,1,0))
 	gui.set_enabled(gui.get_node("textbg"), false)
end

function calcdiff(self)
	local diff = 0
	local class = items.getclass(self.viewitem)

	if class == items.CLASS_RHAND then
		diff = items.getattack(self.viewitem) - items.getattack(data.inv[data.INV_SLOT_RIGHTHAND])
	elseif class == items.CLASS_LHAND then
		diff = items.getdefence(self.viewitem) - items.getdefence(data.inv[data.INV_SLOT_LEFTHAND])
	elseif class == items.CLASS_ARMOUR then	
		diff = items.getdefence(self.viewitem) - items.getdefence(data.inv[data.INV_SLOT_ARMOUR])
	elseif class == items.CLASS_HELMET then	
		diff = items.getdefence(self.viewitem) - items.getdefence(data.inv[data.INV_SLOT_HELMET])
	elseif class == items.CLASS_GLOVES then	
		diff = items.getdefence(self.viewitem) - items.getdefence(data.inv[data.INV_SLOT_GLOVES])
	elseif class == items.CLASS_BOOTS then	
		diff = items.getdefence(self.viewitem) - items.getdefence(data.inv[data.INV_SLOT_BOOTS])
	else
		return
	end
	
	if diff > 0 then
		gui.set_text(gui.get_node("text2"), string.format("+%d", diff))
		gui.set_color(gui.get_node("text2"), vmath.vector4(0,1,0,1))
	elseif diff == 0 then
		gui.set_text(gui.get_node("text2"), "=")
		gui.set_color(gui.get_node("text2"), vmath.vector4(1,1,0,1))
	else
		gui.set_text(gui.get_node("text2"), string.format("%d", diff))
		gui.set_color(gui.get_node("text2"), vmath.vector4(1,0,0,1))
	end
end

function populatetext(self)

	gui.set_enabled(gui.get_node("button1"), true)
	gui.set_color(gui.get_node("text2"), vmath.vector4(1,1,1,0))

	local class = items.getclass(self.viewitem)
	
	if items.isequippable(self.viewitem) then
		if self.viewslot <= data.INV_SIZE then gui.set_text(gui.get_node("buttontext1"), "EQUIP")
		else gui.set_text(gui.get_node("buttontext1"), "UNEQUIP") end
		calcdiff(self)
	elseif class == items.CLASS_FOOD then
		gui.set_text(gui.get_node("buttontext1"), "EAT")
	elseif class == items.CLASS_POTION then
		gui.set_text(gui.get_node("buttontext1"), "DRINK")
	elseif class == items.CLASS_SCROLL then
		gui.set_text(gui.get_node("buttontext1"), "READ")
	else
		gui.set_text(gui.get_node("buttontext1"), "")
		gui.set_enabled(gui.get_node("button1"), false)
	end

	gui.set_text(gui.get_node("text1"), "")

	if items.getattack(self.viewitem) > 0 then
		gui.set_text(gui.get_node("text1"), string.format("Deals %d points of damage", items.getattack(self.viewitem)))
	elseif items.getdefence(self.viewitem) > 0 then
		gui.set_text(gui.get_node("text1"), string.format("Deflects %d%% of damage", items.getdefence(self.viewitem)))
	elseif class == items.CLASS_POTION then
		gui.set_text(gui.get_node("text1"), items.getinfo(self.viewitem))
	elseif items.getedible(self.viewitem) > 0 then
		gui.set_text(gui.get_node("text1"), string.format("Restores %d points of health", items.getedible(self.viewitem)))
	else
		gui.set_text(gui.get_node("text1"), items.getinfo(self.viewitem))
	end
end

local function disablenode (self, node)
 	gui.set_enabled(node, false)
end

local function toggle(self, flag)
	if flag then
	 	gui.set_enabled(gui.get_node("textbg"), true)
		gui.animate(gui.get_node("textbg"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 0.25)
		gui.play_flipbook(gui.get_node("itemicon"), string.format("anim%02d", self.viewitem))
		gui.set_text(gui.get_node("itemname"), items.getname(self.viewitem))
		populatetext(self)
		data.state = data.STATE_EXAMINEITEM
	else
		gui.animate(gui.get_node("textbg"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 0.25, 0, disablenode)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("toggle") then
		if message.item ~= nil then	self.viewitem = message.item end
		if message.slot ~= nil then self.viewslot = message.slot end
		toggle(self, message.flag)
	end
end
