local data = require ("main.data")

function init(self)
	gui.set_color(gui.get_node("inv"), vmath.vector4(1,1,1,0))
 	gui.set_enabled(gui.get_node("inv"), false)	
end

function update(self, dt)
	sort(self)
	
	for n = 1, data.INV_SIZE do
		gui.play_flipbook(gui.get_node(string.format("inv%d", n)), string.format("anim%02d", data.inv[n]))
	end
end

function sort(self)
	local temp = {}
	
	for n = 1, data.INV_SIZE do
		temp[n] = data.inv[n]
		data.inv[n] = 1
	end
	
	n = 1
	local i = 1
	while n <= data.INV_SIZE do
		if temp[n] > 1 then
			data.inv[i] = temp[n]
			i = i + 1
		end
	
		n = n + 1
	end	
end

local function disablenode (self, node)
 	gui.set_enabled(node, false)
end

local function processclick(x, y)

	if gui.pick_node(gui.get_node("inv"), x, y) then
		if gui.pick_node(gui.get_node("lefttab"), x, y) then
			msg.post("view#osd_inv", "hide", {})
			msg.post("view#osd_equipped", "show", {})
			data.state = data.STATE_EQUIPPED
			return
		end
	else
		msg.post("view#osd_inv", "toggle", {flag = false})
		data.state = data.STATE_INGAME		
		return
	end
	
	for slot = 1, data.INV_SIZE do

		if gui.pick_node(gui.get_node(string.format("box%d", slot)), x, y) then
		
			local item = data.inv[slot]
						
			if item > 1 then
				msg.post("view#osd_item", "toggle", {flag = true, item = item, slot = slot})
				msg.post("player", "view", {slot = slot})
			end
		end
	end
end

local function toggle(self, flag)
	if flag then
	 	gui.set_enabled(gui.get_node("inv"), true)
		gui.animate(gui.get_node("inv"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 0.25)
		data.state = data.STATE_INVENTORY
	else
		gui.animate(gui.get_node("inv"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 0.25, 0, disablenode )
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("toggle") then
		toggle(self, message.flag)
	elseif message_id == hash("show") then
		gui.set_color(gui.get_node("inv"), vmath.vector4(1, 1, 1, 1))
	 	gui.set_enabled(gui.get_node("inv"), true)
	elseif message_id == hash("hide") then
		gui.set_color(gui.get_node("inv"), vmath.vector4(1, 1, 1, 0))
	 	gui.set_enabled(gui.get_node("inv"), false)
	elseif message_id == hash("click") then
		processclick(message.x, message.y)
	end
end
