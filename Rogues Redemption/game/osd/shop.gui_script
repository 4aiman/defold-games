local data = require ("main.data")
local itm = require ("game/items.items")

local SHOP_SIZE = 6

local function populateshop(self)
	local min, max
	
	min = itm.getnum("SCROLL OF REVELATION")
	max = itm.getnum("SCROLL OF SWITCHING")
	self.forsale[1] = math.random(min, max)
	self.forsale[2] = math.random(min, max)
	
	min = itm.getnum("HEALTH POTION")
	max = itm.getnum("PROTECTION SOLUTION")
	self.forsale[3] = math.random(min, max)
	self.forsale[4] = math.random(min, max)
	
	min = itm.getnum("BREAD")
	max = itm.getnum("RADISHES")
	self.forsale[5] = math.random(min, max)
	self.forsale[6] = math.random(min, max)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_color(gui.get_node("shop"), vmath.vector4(1,1,1,0))
	self.forsale = {0,0,0,0}
	populateshop(self)
 	gui.set_enabled(gui.get_node("shop"), false)
end

function update(self, dt)
	gui.set_text(gui.get_node("gold"), string.format("%d", data.gold))

	for n = 1, SHOP_SIZE do
		gui.play_flipbook(gui.get_node(string.format("item%d", n)), string.format("anim%02d", self.forsale[n]))
		local cost = itm.getcost(self.forsale[n])
		local str = "PURCHASED"
		if cost > 0 then str = string.format("%s\n%d GOLD", itm.getname(self.forsale[n]), cost) end
		gui.set_text(gui.get_node(string.format("text%d", n)), str)
	end
end

local function disablenode (self, node)
 	gui.set_enabled(node, false)
end

local function toggle(self)
	if data.state == data.STATE_SHOP then
		gui.animate(gui.get_node("shop"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 0.25, 0, disablenode)
		data.state = data.STATE_INGAME
	else
	 	gui.set_enabled(gui.get_node("shop"), true)
		gui.animate(gui.get_node("shop"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 0.25)
		data.state = data.STATE_SHOP
	end
end

local function purchaseitem(self, num)
	if self.forsale[num] <= 1 then
		return
	elseif data.invfull(self) then
		msg.post("view#osd", "update_status", {status = "Your satchel is full", color = vmath.vector4(1,0.5,0,1)})
		msg.post("main:/sound#alarm", "play_sound", {gain = data.sfxvol})									
	elseif data.gold < itm.getcost(self.forsale[num]) then
		msg.post("view#osd", "update_status", {status = "Not enough GOLD", color = vmath.vector4(1,0.5,0,1)})
		msg.post("main:/sound#alarm", "play_sound", {gain = data.sfxvol})									
	else
		local n = data.getemptyslot()
		data.gold = data.gold - itm.getcost(self.forsale[num])
		msg.post("view#osd", "update_status", {status = string.format("Purchased %s %s for %d GOLD",
			itm.getnamedeterminer(self.forsale[num]), itm.getname(self.forsale[num]),
			itm.getcost(self.forsale[num]))})
		data.inv[n] = self.forsale[num]
		self.forsale[num] = 1
		msg.post("main:/sound#coin", "play_sound", {gain = data.sfxvol})		
	end
end

local function processclick(self, x, y) 
	if gui.pick_node(gui.get_node("shop"), x, y) then
		for n = 1, SHOP_SIZE do
			if gui.pick_node(gui.get_node(string.format("item%d", n)), x, y) or 
			   gui.pick_node(gui.get_node(string.format("textbox%d", n)), x, y) then
				purchaseitem(self, n)
			end
		end
	else
		toggle(self)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("toggle") then
		toggle(self)
	elseif message_id == hash("click") then
		processclick(self, message.x, message.y)
	end
end
