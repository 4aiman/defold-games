local data = require ("main.data")

function init(self)
 	gui.set_enabled(gui.get_node("equipped"), false)
	gui.set_color(gui.get_node("equipped"), vmath.vector4(1,1,1,0))
end

function update(self, dt)
	for n = data.INV_SIZE + 1, data.INV_SIZE + 6 do
		gui.play_flipbook(gui.get_node(string.format("inv%d", n)), string.format("anim%02d", data.inv[n]))
	end
end

local function disablenode (self, node)
 	gui.set_enabled(node, false)
end

local function processclick(x, y)
	
	if gui.pick_node(gui.get_node("equipped"), x, y) then
		if gui.pick_node(gui.get_node("righttab"), x, y) then
			msg.post("view#osd_equipped", "hide", {})
			msg.post("view#osd_inv", "show", {})
			data.state = data.STATE_INVENTORY
			return
		end
	else
		msg.post("view#osd_equipped", "toggle", {flag = false})
		data.state = data.STATE_INGAME		
		return
	end

	for n = 1, 6 do

		if gui.pick_node(gui.get_node(string.format("box%d", n)), x, y) then
		
			local slot = data.INV_SIZE + n
			local item = data.inv[slot]
						
			if item > 1 then
				msg.post("view#osd_item", "toggle", {flag = true, item = item, slot = slot})
				msg.post("player", "view", {slot = slot})
			end
		end
	end
end

local function toggle(self, flag)
	if flag then
	 	gui.set_enabled(gui.get_node("equipped"), true)
		gui.animate(gui.get_node("equipped"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 1), gui.EASING_INOUTQUAD, 0.25)
		data.state = data.STATE_EQUIPPED
	else
		gui.animate(gui.get_node("equipped"), gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 0.25, 0, disablenode )
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("toggle") then
		toggle(self, message.flag)
	elseif message_id == hash("show") then
		gui.set_color(gui.get_node("equipped"), vmath.vector4(1, 1, 1, 1))
	 	gui.set_enabled(gui.get_node("equipped"), true)
 	elseif message_id == hash("hide") then
		gui.set_color(gui.get_node("equipped"), vmath.vector4(1, 1, 1, 0))
	 	gui.set_enabled(gui.get_node("equipped"), false)
	elseif message_id == hash("click") then
		processclick(message.x, message.y)
	end
end
