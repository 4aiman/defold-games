local data = require ("main.data")

function init(self)
	msg.post(".", "acquire_input_focus")
	self.target = go.get_position()
	self.lineofsight = false	
end

function spawn(self)
	sprite.set_constant("#sprite", "tint", vmath.vector4(1, 1, 1, 1))
	self.target = data.findcorridortile(self)
	self.target = vmath.vector3((self.target.x * 16) - 8, (self.target.y * 16) - 8, 0.5)

	go.set_position(self.target)
	
	print("spawned NPC", self.target)
end

function hide(self)
	sprite.set_constant("#sprite", "tint", vmath.vector4(1, 1, 1, 0))
end

local function move(self)
	local pos = go.get_position()

	if data.istilefree(self, pos.x + 16, pos.y) then
		self.target = vmath.vector3(pos.x + 16, pos.y, pos.z)
	elseif data.istilefree(self, pos.x - 16, pos.y) then
		self.target = vmath.vector3(pos.x - 16, pos.y, pos.z)
	elseif data.istilefree(self, pos.x, pos.y + 16) then
		self.target = vmath.vector3(pos.x, pos.y + 16, pos.z)
	elseif data.istilefree(self, pos.x, pos.y - 16) then
		self.target = vmath.vector3(pos.x, pos.y - 16, pos.z)
	end
end

function update(self, dt)
	local pos = go.get_position()

	if pos.x ~= data.playerpos.x or pos.y ~= data.playerpos.y then
		physics.ray_cast(pos, data.playerpos, {hash("world"), hash("player")})
	end

	if math.abs(pos.x - data.playerpos.x) <=16 and math.abs(pos.y - data.playerpos.y) <=16 then
		self.lineofsight = true
	end
	
	if data.gettile(self, pos.x, pos.y, "fog") == 0 and self.lineofsight then
	    sprite.set_constant("#sprite",  "tint", vmath.vector4(1,1,1,1))
	else
	    sprite.set_constant("#sprite",  "tint", vmath.vector4(1,1,1,0))
	end

	if pos.x == data.playerpos.x and pos.y == data.playerpos.y then
		move(self)
	end
				
	if pos.x < self.target.x then pos.x = pos.x + 1
	elseif pos.x > self.target.x then pos.x = pos.x - 1	end
	if pos.y < self.target.y then pos.y = pos.y + 1
	elseif pos.y > self.target.y then pos.y = pos.y - 1	end

	go.set_position(pos)

	self.lineofsight = false
end

local function processclick(self, x, y)
	local p = go.get_position()
	local c = vmath.vector3(x, y, 0)
	local rect = vmath.vector4(p.x - 16, p.y - 16, p.x, p.y)
	
	c = data.screentoworld(self, c)
		
	if data.ptinrect (c.x, c.y, rect) and 
		math.abs(p.x - data.playerpos.x) <= 16 and math.abs(p.y - data.playerpos.y) <= 16 then
		msg.post("#script", "toggle", {})
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("spawn") then spawn(self)
	elseif message_id == ("hide") then hide(self)
	elseif message_id == hash("ray_cast_response") then
		if message.group == hash("player") then
			self.lineofsight = true
		end
	end
end

function on_input(self, action_id, action)
	if data.turn ~= 0 then
		return
	end

	if action.pressed and data.state == data.STATE_INGAME then			
		if action_id == hash("mouse_click") then
			processclick(self, action.x, action.y)
		end
	end
end


