local data = require ("main.data")

function init(self)
	msg.post(".", "acquire_input_focus")
	self.valid = data.validsavegame(self)
	
	if self.valid ~= nil then
		gui.set_color(gui.get_node("load"), vmath.vector4(1,1,1,1))
		gui.set_color(gui.get_node("loadinfo"), vmath.vector4(1,1,1,1))
		gui.set_text(gui.get_node("loadinfo"), string.format("%s, depth %d", data.classnames[data.class], data.depth))
	else
		gui.set_color(gui.get_node("loadinfo"), vmath.vector4(1,1,1,0.25))
		gui.set_text(gui.get_node("loadinfo"), "NO SAVED GAME")
	end
end

function update(self, dt)
end

local function disablenode (self, node)
 	gui.set_enabled(node, false)
end

local function newgame(self)
	data.newgame = true
	gui.animate(gui.get_node("bg"), gui.PROP_POSITION, vmath.vector3(-448, 0, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
	msg.post("#charsel", "show", {})
end

local function loadgame(self)
	data.newgame = false
	data.loadgamefile(self)
	msg.post("main:/handler", "show_game")
end

local function settings(self)
	gui.animate(gui.get_node("bg"), gui.PROP_POSITION, vmath.vector3(448, 0, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
	msg.post("#settings", "show", {})
end

local function processclick(self, x, y) 
	if gui.pick_node(gui.get_node("startbox"), x, y) then
		newgame(self)
		return
	elseif gui.pick_node(gui.get_node("loadbox"), x, y) and self.valid ~= nil then
		loadgame(self)
	elseif gui.pick_node(gui.get_node("settings"), x, y) then
		settings(self)
	elseif gui.pick_node(gui.get_node("exit"), x, y) then
		msg.post("@system:", "exit", {code = 0})	
	end
end 

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
	 	gui.set_enabled(gui.get_node("bg"), true)
		gui.animate(gui.get_node("bg"), gui.PROP_POSITION, vmath.vector3(0, 0, 0), gui.EASING_INOUTQUAD, 0.5)
		data.state = data.STATE_MAINMENU
	end
end

function on_input(self, action_id, action)
	if action.pressed and data.state == data.STATE_MAINMENU then			
		if action_id == hash("mouse_click") then
			processclick(self, action.x, action.y)
		end
	end
end

