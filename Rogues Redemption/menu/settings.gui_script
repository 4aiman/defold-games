local data = require ("main.data")

local function updatetoggles(self)
	if data.sfxvol > 0 then gui.set_text(gui.get_node("sfx"), "SOUND FX : ON")
	else gui.set_text(gui.get_node("sfx"), "SOUND FX : OFF")
	end

	if data.musicvol > 0 then gui.set_text(gui.get_node("music"), "MUSIC : ON")
	else gui.set_text(gui.get_node("music"), "MUSIC : OFF")
	end

	if data.detail then gui.set_text(gui.get_node("detail"), "DETAIL : HIGH")
	else gui.set_text(gui.get_node("detail"), "DETAIL : NORMAL")
	end

	if data.keep then
		gui.set_text(gui.get_node("keep"), "KEEP SAVE : YES")
		gui.set_text(gui.get_node("keepinfo"), "keeps save file on death")
	else
		gui.set_text(gui.get_node("keep"), "KEEP SAVE : NO")
		gui.set_text(gui.get_node("keepinfo"), "deletes save file on death")
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_position(gui.get_node("bg"), vmath.vector3(-448, 0, 0))
 	gui.set_enabled(gui.get_node("bg"), false)
		
	updatetoggles(self)
end

function update(self, dt)
end

local function disablenode (self, node)
 	gui.set_enabled(node, false)
end

local function processclick(self, x, y) 
	if gui.pick_node(gui.get_node("sfxbox"), x, y) then
		data.sfxvol = 1 - data.sfxvol
		updatetoggles(self)
		return
	end
	
	if gui.pick_node(gui.get_node("musicbox"), x, y) then
		data.musicvol = 1 - data.musicvol
		updatetoggles(self)
		return
	end
	
	if gui.pick_node(gui.get_node("detailbox"), x, y) then
		data.detail = not data.detail
		updatetoggles(self)
		return
	end

	if gui.pick_node(gui.get_node("keepbox"), x, y) then
		data.keep = not data.keep
		updatetoggles(self)
		return
	end

	if gui.pick_node(gui.get_node("backbox"), x, y) then
		gui.animate(gui.get_node("bg"), gui.PROP_POSITION, vmath.vector3(-448, 0, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
		msg.post("#mainmenu", "show", {})
	end
end 

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		data.state = data.STATE_SETTINGS
	 	gui.set_enabled(gui.get_node("bg"), true)
		gui.animate(gui.get_node("bg"), gui.PROP_POSITION, vmath.vector3(0, 0, 0), gui.EASING_INOUTQUAD, 0.5)
	end
end

function on_input(self, action_id, action)
	if action.pressed and data.state == data.STATE_SETTINGS then			
		if action_id == hash("mouse_click") then
			processclick(self, action.x, action.y)
		end
	end
end


