local data = require ("main.data")

local function disablenode (self, node)
	gui.set_enabled(node, false)
end

local function highlight(self)
	gui.set_color(gui.get_node("1/outer"), vmath.vector3(49/255, 70/255, 113/255))
	gui.set_color(gui.get_node("2/outer"), vmath.vector3(49/255, 70/255, 113/255))
	gui.set_color(gui.get_node("3/outer"), vmath.vector3(49/255, 70/255, 113/255))

	gui.set_color(gui.get_node("1/tab"), vmath.vector3(49/255, 70/255, 113/255))
	gui.set_color(gui.get_node("2/tab"), vmath.vector3(49/255, 70/255, 113/255))
	gui.set_color(gui.get_node("3/tab"), vmath.vector3(49/255, 70/255, 113/255))
	
	if data.heli == 1 then
		gui.set_color(gui.get_node("1/outer"), vmath.vector3(85/255, 122/255, 196/255))
		gui.set_color(gui.get_node("1/tab"), vmath.vector3(85/255, 122/255, 196/255))
	elseif data.heli == 2 then
		gui.set_color(gui.get_node("2/outer"), vmath.vector3(85/255, 122/255, 196/255))
		gui.set_color(gui.get_node("2/tab"), vmath.vector3(85/255, 122/255, 196/255))
	elseif data.heli == 3 then
		gui.set_color(gui.get_node("3/outer"), vmath.vector3(85/255, 122/255, 196/255))
		gui.set_color(gui.get_node("3/tab"), vmath.vector3(85/255, 122/255, 196/255))
	end
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.node = gui.get_node("container")
	gui.set_enabled(self.node, false)
	gui.set_position(self.node, vmath.vector3(640, 260, 0))
	gui.set_color(self.node, vmath.vector4(1,1,1,0))
	highlight(self)
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(640, 360, 0), gui.EASING_INOUTQUAD, 0.5)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 0.5)
end

local function hide(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(640, 260, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INOUTQUAD, 0.5)
end

function on_input(self, action_id, action)
	if data.state == data.STATE_SELECT then
		if action_id == hash("1") and action.pressed then
			data.heli = 1
			highlight(self)	
		elseif action_id == hash("2") and action.pressed then
			data.heli = 2
			highlight(self)
		elseif action_id == hash("3") and action.pressed then
			data.heli = 3
			highlight(self)
		elseif action_id == hash("quit") and action.pressed then
			hide(self)
			msg.post("#menu", "show", {})
		elseif action_id == hash("fire") and action.pressed then
			msg.post("main:/handler", "show_game")
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then show(self)
	end
end