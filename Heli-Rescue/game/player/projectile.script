local data = require ("main.data")

go.property("angle", 0)
go.property("speed", 0)
go.property("damage", 0)

function init(self)
	self.velocity = vmath.vector3(math.cos(self.angle) * self.speed, math.sin(self.angle) * self.speed, 0)
end

local function impact(self, p)
	msg.post("main:/sound#hit", "play_sound", {gain = 1.0})
	particlefx.play("#explosion_small")
	go.delete()
end

local function explode(self, p)
	msg.post("common/effects", "explosion", {pos = p, f = true})
	go.delete()
end

local function collision(self, message)
	local p = data.world2tile(go.get_position())

	if data.validtile(p.x, p.y) then
		local t = tilemap.get_tile("level#tilemap", "top", p.x, p.y)
		if data.destructible_tile(t) then
			local h = tilemap.get_tile("level#tilemap", "hits", p.x, p.y)
			h = h - self.damage
			if h <=0 then
				explode(self, data.tile2world(p))
			else
				impact(self, p)
				tilemap.set_tile("level#tilemap", "hits", p.x, p.y, h)
			end
		end
	end
end

function update(self, dt)
	if data.state ~= data.STATE_PAUSED then
		local p = go.get_position() + self.velocity
		if data.onscreen(p) then
			go.set_position(p)
			collision(self)
		else go.delete()
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") and message.other_group == hash("enemy") then
		go.delete()
	end
end