local data = require ("main.data")

local ROTATE_SPEED = 0.025
local SHOOT_TIME = 60
local BARREL_LEN = 12

function init(self)
	self.angle = 0
	self.targetangle = 0
	self.timer = 0
end

function update(self, dt)
	local pos = go.get_position()

	if not data.onscreen(pos) or data.state ~= data.STATE_PLAYING then return end
		
	local v = pos - data.playerpos
	self.targetangle = -math.atan2 (v.x, v.y) - (math.pi / 2)

	physics.ray_cast(pos, data.playerpos, {hash("world"), hash("player")})

	if math.abs(self.angle - self.targetangle) > math.pi then
		if self.targetangle > self.angle then
			self.targetangle = self.targetangle - (math.pi * 2)
		else
			self.targetangle = self.targetangle + (math.pi * 2)
		end
	end

	if (self.angle < self.targetangle) then
		self.angle = self.angle + ROTATE_SPEED
	elseif (self.angle > self.targetangle) then
		self.angle = self.angle - ROTATE_SPEED
	end

	local diff

	if self.angle > self.targetangle then
		diff = self.angle - self.targetangle
	else
		diff = self.targetangle - self.angle
	end

	if diff < ROTATE_SPEED then
		self.angle = self.targetangle
	end

	local r = vmath.quat_rotation_z(self.angle)
	go.set_rotation(r)

	if self.timer == SHOOT_TIME - (data.level * 3) then
		pos.z = pos.z - 0.1
		local p = vmath.vector3(math.cos(self.angle) * BARREL_LEN, math.sin(self.angle) * BARREL_LEN, 0)
		
		local bullet = factory.create("#bullet_factory", pos + p, nil, {angle = self.angle}, 1)
		msg.post("main:/sound#shot", "play_sound", {gain = 0.5})
		self.timer = 0
	end

	self.timer = self.timer + 1
end

local function destroy(self)
	particlefx.play("#explosion_large")
	msg.post(string.format("main:/sound#exp%d", math.random(1,3)), "play_sound", {gain = 1.0})
	local p = data.world2tile(go.get_position())
	local t = tilemap.get_tile("level#tilemap", "top", p.x, p.y)
	t = t + 1
	tilemap.set_tile("level#tilemap", "top", p.x, p.y, t)
	go.delete()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") and message.other_group == hash("rocket") then
		destroy(self)
	end
end

