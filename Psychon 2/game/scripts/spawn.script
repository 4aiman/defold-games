local data = require ("game.scripts.data")

local function is_solid (sx, sy)
	local s = 1
	local tw = tilemap.get_tile(self.url_level, hash("world"), sx, sy)
	local to = tilemap.get_tile(self.url_level, hash("objects"), sx, sy)
	
	if tw < 512 then
		s = 0
	end
				
	if to > 0 and to < 512 then	 
	 	s = 0
 	end
	
	return s
end

function init(self)
	self.waypoints = {}
	self.spawned_objects = {}
	self.url_level = string.format("level%d:/world#tilemap", data.level)
	process_level(self)
end

function process_level(self)
	local x, y, w, h = tilemap.get_bounds(self.url_level)
	local c = 0

	for ty = y, y + h - 1 do
		for tx = x, x + w - 1 do		
			local floor_tile = tilemap.get_tile(self.url_level, hash("world"), tx, ty)
			local obj_tile = tilemap.get_tile(self.url_level, hash("objects"), tx, ty)
			local spawn_tile = tilemap.get_tile(self.url_level, hash("spawn"), tx, ty)

			if spawn_tile == 481 then
				local pos = vmath.vector3((tx * 16) - 8, (ty * 16) - 8, 1)
				local enemy
				if math.random() < 0.5 then
					enemy = factory.create("#factory1", pos, nil, {}, 1)
				else
					enemy = factory.create("#factory2", pos, nil, {}, 1)
				end					
				table.insert(self.spawned_objects, enemy)
			elseif spawn_tile == 482 then
				local pos = vmath.vector3((tx * 16) - 8, (ty * 16) - 8, 1)
				msg.post("/common/player", "spawn_pos", {p = pos})
			end
			
			if obj_tile == 973 then
				local v = vmath.vector3((tx * 16) - 8, (ty * 16) - 8, obj_tile)
				table.insert (self.waypoints, v)
				c = c + 1
			end

			if floor_tile == 614 then
				local v = vmath.vector3((tx * 16) - 8, (ty * 16) - 8, floor_tile)
				table.insert (self.waypoints, v)
				c = c + 1
			end
		end
	end

	msg.post ("view#gui", "waypoints", {wp = self.waypoints})
	print(c, " waypoints found")
end

local function delete_enemy(self, id)
	for k, v in ipairs(self.spawned_objects) do
		if(v == id) then
			table.remove(self.spawned_objects,k)
			go.delete(id)
			return
		end
	end	
end

function final (self)
	for k, v in pairs(self.spawned_objects) do
		table.remove(self.spawned_objects, k)
		go.delete(v)
	end	
end

function on_message(self, message_id, message, sender)
	if (message_id == hash("delete_enemy")) then
		local enemy = message.enemy
    	delete_enemy (self,enemy)
   	end
end