local data = require ("main.data")

local function disablenode (self, node)
	gui.set_enabled(node, false)
	self.enabled = false
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(0, 0, 0), gui.EASING_INOUTQUAD, 0.5)
	self.enabled = true
end

local function hideleft(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(-448, 0, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
	self.enabled = false
	msg.post("main:/sound#tap", "play_sound", {gain = 1.0})
end

local function hideright(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(448, 0, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
	self.enabled = false
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.node = gui.get_node("container")
	self.enabled = true
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		show(self)
	elseif message_id == hash("hideright") then
		hideright(self)
	end
end

function on_input(self, action_id, action)
	if gui.pick_node(gui.get_node("easy"), action.x, action.y) and action.pressed then
		hideleft(self)
		data.leveloffset = 0
		msg.post("#levelselect", "show", {})
	elseif gui.pick_node(gui.get_node("normal"), action.x, action.y) and action.pressed then
		hideleft(self)
		data.leveloffset = 24
		msg.post("#levelselect", "show", {})
	elseif gui.pick_node(gui.get_node("hard"), action.x, action.y) and action.pressed then
		hideleft(self)
		data.leveloffset = 12
		msg.post("#levelselect", "show", {})
	end

	if action_id ~= nil and action.pressed and self.enabled then
		msg.post("ufo", "input", {id = action_id, action = action})
	end
end

