local data = require ("main.data")

function init(self)
	self.stars = 0
	self.timer = 0
	self.fadecomplete = 0
	self.failed = false
	self.node = gui.get_node("continue")
	msg.post(".", "acquire_input_focus")
	gui.set_enabled(self.node, false)
	gui.set_enabled(gui.get_node("star1"), false)
	gui.set_enabled(gui.get_node("star2"), false)
	gui.set_enabled(gui.get_node("star3"), false)
	gui.set_position(self.node, vmath.vector3(224,-150,0))
end

local function button(self)
	gui.set_enabled(self.node, false)
	msg.post("main:/sound#tap", "play_sound", {gain = 1.0})
	
	if self.failed then
		data.state = data.STATE_PLAYING
		msg.post("arrow", "resetlevel", {})
		self.failed = false
	else
		data.level = data.level + 1
		if data.level > data.leveloffset + 12 then
			msg.post("main:/handler", "show_menu")
		else
			self.fadecomplete = self.timer + 50
			msg.post("#fade", "hide")
		end
	end
end

function update(self)
	if data.state == data.STATE_LEVELCLEAR then
		if self.stars >= 1 and self.timer == 50 then
			gui.set_enabled(gui.get_node("star1"), true)
			msg.post("main:/sound#pop", "play_sound", {gain = 1.0})
		elseif self.stars >= 2 and self.timer == 90 then
			gui.set_enabled(gui.get_node("star2"), true)
			msg.post("main:/sound#pop", "play_sound", {gain = 1.0})
		elseif self.stars >= 3 and self.timer == 130 then
			gui.set_enabled(gui.get_node("star3"), true)
			msg.post("main:/sound#pop", "play_sound", {gain = 1.0})
		end
		self.timer = self.timer + 1

		if self.timer == self.fadecomplete then
			data.state = data.STATE_PLAYING
			msg.post("game:/loader", "new_level", {})
		end
	end
end
				
local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(224,400, 0, 0), gui.EASING_INOUTQUAD, 0.35)
	self.timer = 0

	self.stars = 3 - (data.strokes - data.par[data.level])
	if self.stars < 0 then self.stars = 0
	elseif self.stars > 3 then self.stars = 3
	end
	if self.stars > data.progress[data.level] then
		data.progress[data.level] = self.stars 
		data.save()
	end
	
	local r = data.strokes - data.par[data.level]
	local node = gui.get_node("title")
	gui.set_text(gui.get_node("buttontext"), "CONTINUE")
	if r == -4 then gui.set_text(node, "CONDOR!")
	elseif r == -3 then gui.set_text(node, "ALBATROSS!")
	elseif r == -2 then gui.set_text(node, "EAGLE!")
	elseif r == -1 then gui.set_text(node, "BIRDIE!")
	elseif r == 0 then gui.set_text(node, "PAR!")
	elseif r == 1 then gui.set_text(node, "BOGEY")
	elseif r == 2 then gui.set_text(node, "DOUBLE BOGEY")
	elseif r > 2 then
		gui.set_text(node, "HOLE FAILED")
		gui.set_text(gui.get_node("buttontext"), "RETRY")
		self.failed = true
	end
	if r <= 2 then msg.post("main:/sound#clear", "play_sound", {gain = 1.0})
	else msg.post("main:/sound#fail", "play_sound", {gain = 1.0})
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		show(self)
	end
end

function on_input(self, action_id, action)
	if data.state == data.STATE_LEVELCLEAR then
		if action_id == hash("tap") and action.pressed then
			local node = gui.get_node("button")
			if gui.pick_node(node, action.x, action.y) then
				button(self)
			end
		end
	end
end
