local data = require ("main.data")

function init(self)
	msg.post(".", "acquire_input_focus")
	gui.set_enabled(gui.get_node("hourglass"), false)
	gui.set_enabled(gui.get_node("menu"), false)
	self.closewait = 0
end

local function update_hourglass(self, status)
	gui.set_enabled(gui.get_node("hourglass"), status)
end

local function update_power(self, power)
	gui.set_scale(gui.get_node("powerbar"), vmath.vector3(power, 1, 1))
end

local function update_panel(self)
	local l = data.level
	while l > 12 do
		l = l - 12
	end
	
	gui.set_text(gui.get_node("holetext"), string.format("%02d", l))
	gui.set_text(gui.get_node("partext"), string.format("%02d", data.par[data.level]))

	local node = gui.get_node("strokestext")
	gui.set_text(node, string.format("%02d", data.strokes))

	if data.strokes > data.par[data.level] + 1 then
		gui.set_color(node, vmath.vector4(190/255, 52/255, 81/255, 1))
	else
		gui.set_color(node, vmath.vector4(1,1,1,1))
	end
end

function update(self)
	if self.closewait > 0 then
		self.closewait = self.closewait - 1
		if self.closewait == 0 then
			data.state = data.STATE_PLAYING
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("status") then
		update_hourglass(self, message.status)
	elseif message_id == hash("power") then
		update_power(self, message.power)
	elseif message_id == hash("panel") then
		update_panel(self)
	end
end

local function toggle_menu(self)
	if data.state == data.STATE_PLAYING then
		gui.set_enabled(gui.get_node("menu"), true)
		data.state = data.STATE_GAMEMENU
		msg.post("game:/loader", "set_time_step", {factor = 0, mode = 1})
	elseif data.state == data.STATE_GAMEMENU then
		gui.set_enabled(gui.get_node("menu"), false)
		self.closewait = 1
		msg.post("game:/loader", "set_time_step", {factor = 1, mode = 1})
	end
	msg.post("main:/sound#tap", "play_sound", {gain = 1.0})
end

local function checkoffmenu(self, action_id, action)
	local r = false

	if action_id == hash("tap") and action.pressed then
		local node = gui.get_node("menu")
		local p = gui.get_screen_position(node)
		local s = gui.get_size(node)
		local w = s.x
		local h = s.y
		r = true
		if action.x > p.x and action.y > p.y and action.x < p.x+w and action.y < p.y+h then
			r = false
		end
	end

	return r
end
	
function on_input(self, action_id, action)
	if gui.pick_node(gui.get_node("menubutton"), action.x, action.y) and action.pressed then
		toggle_menu(self)
	elseif data.state == data.STATE_GAMEMENU then
		if gui.pick_node(gui.get_node("mulligan"), action.x, action.y) and action.pressed then
			msg.post("arrow", "mulligan", {})
			toggle_menu(self)
		elseif gui.pick_node(gui.get_node("restart"), action.x, action.y) and action.pressed then
			msg.post("arrow", "resetlevel", {})
			toggle_menu(self)
		elseif gui.pick_node(gui.get_node("quit"), action.x, action.y) and action.pressed then
			msg.post("main:/handler", "show_menu")
		elseif gui.pick_node(gui.get_node("cancel"), action.x, action.y) and action.pressed then
			toggle_menu(self)
		elseif checkoffmenu(self, action_id, action) then
			toggle_menu(self)
		end
	end
end



