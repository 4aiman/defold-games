local data = require ("main.data")

function init(self)
	self.timer = 100
end

function final(self)
end

function update(self, dt)

	if data.fuel <= 20 then
		gui.set_color(gui.get_node("fuel"), vmath.vector4(1, 0, 0, 1))
	else
		gui.set_color(gui.get_node("fuel"), vmath.vector4(1, 1, 1, 0))
	end		

	if data.shield <= 20 then
		gui.set_color(gui.get_node("shield"), vmath.vector4(1, 0, 0, 1))
	else
		gui.set_color(gui.get_node("shield"), vmath.vector4(1, 1, 1, 0))
	end		

	if data.artifacts >= 4 then
		gui.set_color(gui.get_node("artifacts"), vmath.vector4(0, 1, 0, 1))
	else
		gui.set_color(gui.get_node("artifacts"), vmath.vector4(1, 1, 1, 1))
	end		


    local str = string.format("%d%%", data.fuel)
	gui.set_text(gui.get_node("fuel"), str)
	gui.set_scale(gui.get_node("fuel_bar"), vmath.vector3(4 * (data.fuel/100), 4, 1))

    str = string.format("%d%%", data.shield)
	gui.set_text(gui.get_node("shield"), str)
	gui.set_scale(gui.get_node("shield_bar"), vmath.vector3(4 * (data.shield/100), 4, 1))

    str = string.format("%d/4", data.artifacts)
	gui.set_text(gui.get_node("artifacts"), str)

	
	if self.timer > 0 then
		self.timer = self.timer - 1
	end

	if self.timer == 1 then
		node = gui.get_node("status")
		gui.animate(node, gui.PROP_COLOR, vmath.vector4(1, 1, 1, 0), gui.EASING_INOUTQUAD, 0.5)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("level_clear") then
		node = gui.get_node("largetext")
		if data.level < 6 then
			gui.set_text(node, "LEVEL CLEAR")
		else
			gui.set_text(node, "GAME COMPLETE")
			local n = gui.get_node("thanks")
			gui.animate(n, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 1)			
		end			
		gui.animate(node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 1)
	elseif message_id == hash("game_over") then
		node = gui.get_node("largetext")
		gui.set_text(node, "GAME OVER")
		gui.animate(node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 1)
	elseif message_id == hash("out_of_fuel") then
		node = gui.get_node("largetext")
		gui.set_text(node, "OUT OF FUEL")
		gui.animate(node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 1)
	elseif message_id == hash("fade_in") then
		node = gui.get_node("fade")
		gui.animate(node, gui.PROP_COLOR, vmath.vector4(0,0,0,0), gui.EASING_INOUTQUAD, 0.2)
	elseif message_id == hash("fade_out") then
		node = gui.get_node("fade")
		gui.animate(node, gui.PROP_COLOR, vmath.vector4(0,0,0,1), gui.EASING_INOUTQUAD, 0.2)    
    elseif(message_id == hash("update_status")) then
		gui.set_text(gui.get_node("status"), message.status)
		gui.set_color(gui.get_node("status"), vmath.vector4(1, 1, 1, 1))
		self.timer = 100
--[[	elseif message_id == hash("tint") then
		local t = data.get_tint()
		t.w = 0.35
		gui.set_color(gui.get_node("osd_back"), t)--]]
	end
end

