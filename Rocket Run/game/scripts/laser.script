local data = require ("main.data")

go.property("angle", 0)
local speed = 6

function init(self)
	self.life = 50
	self.velocity = vmath.vector3(math.cos(self.angle) * speed, -math.sin(self.angle) * speed, 0)
	particlefx.play("#trail")
	
end

function final(self)
	particlefx.stop("#trail")
end

function update(self, dt)
	self.life = self.life - 1
	if self.life < 1 then
		msg.post("common/player", "delete_laser", {laser = go.get_id()})
	end

	p = go.get_position() + self.velocity
	go.set_position(p)
end

function checkblock(pos)
	t = tilemap.get_tile(string.format("level%d:/level#tilemap", data.level), "world", (pos.x + 8) / 16, (pos.y + 12) / 16)

	if t == 113 then
		tilemap.set_tile(string.format("level%d:/level#tilemap", data.level), "world", (pos.x + 8) / 16, (pos.y + 12) / 16, 0)
		particlefx.play("#pop")
    	msg.post("main:/sound#break", "play_sound", {gain = 1.0})					
	else
		particlefx.play("#spark")	
	end

end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		if message.group == hash("world") then
			checkblock(message.position + self.velocity)
			msg.post("common/player", "delete_laser", {laser = go.get_id()})		
		elseif message.group == hash("enemy") or message.group == hash("mine") then
			particlefx.play("#spark")
			msg.post(message.other_id, "bullet_hit", {})    		
			msg.post("common/player", "delete_laser", {laser = go.get_id()})		
		end
  	end
end

