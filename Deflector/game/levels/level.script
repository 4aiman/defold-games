local data = require ("main.data")

local function parsetile(x, y)
	local t = tilemap.get_tile("#tilemap", "level", x, y)

	if t >= 25 and t <= 28 then
		local pos = vmath.vector3(x, y, 1)
		local vel = vmath.vector3(0, 0, 0)
	
		if t == 25 then vel = vmath.vector3(-1,0,0)
		elseif t == 26 then vel = vmath.vector3(1,0,0)
		elseif t == 27 then vel = vmath.vector3(0,1,0)
		elseif t == 28 then vel = vmath.vector3(0,-1,0)		
		end
	
		msg.post("common/ball", "add", {position = pos, velocity = vel})
		data.numballs = data.numballs + 1
	elseif t == 40 then
		data.teleport = vmath.vector3(x, y, 0)	
	end
end

function init(self)				
	data.numballs = 0

	for y = 6, 12 do
		for x = 1, 7 do
			parsetile(x, y)
		end
	end

	local t = 1
	self.palette = {}
	
	for y = 2, 3 do
		for x = 1, 7 do
			self.palette[t] = tilemap.get_tile("#tilemap", "player", x, y)
			t = t + 1			
		end
	end	
end

local function reset(self)
	for y = 6, 12 do
		for x = 1, 7 do
			tilemap.set_tile("#tilemap", "player", x, y, 0)
		end
	end

	local t = 1
	
	for y = 2, 3 do
		for x = 1, 7 do
			tilemap.set_tile("#tilemap", "player", x, y, self.palette[t])
			t = t + 1
		end
	end	
end

local function snapshot(self)
	self.snapshot = {}

	local t = 1
	
	for y = 6, 12 do
		for x = 1, 7 do
			self.snapshot[t] = tilemap.get_tile("#tilemap", "player", x, y)
			t = t + 1			
		end
	end	
end

local function restore(self)
	local t = 1
	
	for y = 6, 12 do
		for x = 1, 7 do
			tilemap.set_tile("#tilemap", "player", x, y, self.snapshot[t])
			t = t + 1			
		end
	end	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("reset") then
		reset(self)
	elseif message_id == hash("snapshot") then
		snapshot(self)
	elseif message_id == hash("restore") then
		restore(self)
	end
end