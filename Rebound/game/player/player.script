local data = require ("main.data")

local ACCEL = 1
local DECEL = 0.5
local TOP_SPEED = 4
local TELEPORT_TIMEOUT = 60

function init(self)
	msg.post(".", "acquire_input_focus")
	data.state = data.STATE_GETREADY
	self.teleport = 0
	self.levelurl = string.format("level%d:/map#level", data.level)
	self.move = vmath.vector3(0, 0, 0)
	self.correction = vmath.vector3(0, 0, 0)	
	go.set_position(vmath.vector3(512, 512, 1))
end

function final(self)
end

local function move(self)
	local pos = go.get_position()
	
	if self.move.x > TOP_SPEED then self.move.x = TOP_SPEED
	elseif self.move.x < -TOP_SPEED then self.move.x = -TOP_SPEED
	end
	if self.move.y > TOP_SPEED then self.move.y = TOP_SPEED
	elseif self.move.y < -TOP_SPEED then self.move.y = -TOP_SPEED
	end
	
	pos.x = pos.x + self.move.x
	pos.y = pos.y + self.move.y
	
	go.set_position(pos)

	if self.move.x > 0 then
		self.move.x = self.move.x - DECEL
		if self.move.x < 0 then self.move.x = 0 end
	elseif self.move.x < 0 then
		self.move.x = self.move.x + DECEL
		if self.move.x > 0 then self.move.x = 0 end
	end

	if self.move.y > 0 then
		self.move.y = self.move.y - DECEL
		if self.move.y < 0 then self.move.y = 0 end
	elseif self.move.y < 0 then
		self.move.y = self.move.y + DECEL
		if self.move.y > 0 then self.move.y = 0 end
	end
	
	data.playerpos = vmath.vector3(pos.x, pos.y, pos.z)
end

local function checktile(p)
	hit = false

	p.x = math.floor((p.x + 32) / 32)
	p.y = math.floor((p.y + 32) / 32)

	local t = tilemap.get_tile(self.levelurl, "top", p.x, p.y)

	if t >= 16 and t <= 128 then
		hit = true
	end
	
	return hit
end

local function distance2ball (self)
	local r = 0
	
	local x = math.abs (data.playerpos.x - data.ballpos.x)
	local y = math.abs (data.playerpos.y - data.ballpos.y)
		
	return x + y
end 

local function checkspecial(self)
	local p = go.get_position()

	p.x = math.floor((p.x + 32) / 32)
	p.y = math.floor((p.y + 32) / 32)
	
	local t = tilemap.get_tile(self.levelurl, "special", p.x, p.y)
	
	if t ~= 0 then
		--tilemap.set_tile(self.levelurl, "special", p.x, p.y, 0)
	end

	if t == 132 and self.teleport == 0 and distance2ball(self) > 64 then
		msg.post("ball", "position", {pos = go.get_position()})
		msg.post("main:/sound#swap", "play_sound", {gain = 1.0})
		go.set_position(data.ballpos)
		self.teleport = TELEPORT_TIMEOUT
	elseif self.teleport > 0 then
		self.teleport = self.teleport - 1
	end
	
	if t == 133 then
		msg.post("ball", "bulldozer", {pos = go.get_position()})	
		msg.post("main:/sound#bulldozer", "play_sound", {gain = 1.0})
		tilemap.set_tile(self.levelurl, "special", p.x, p.y, 0)
	elseif t == 113 then
		msg.post("ball", "loselife", {})
	end
end

function update(self, dt)
	if data.state == data.STATE_PLAYING then
		move(self)
		checkspecial(self)
	end
	
	msg.post("view", "look_at", { position = go.get_position() })
	
	self.correction = vmath.vector3(0, 0, 0)
end

local function resolve(self, message)
    if message.distance > 0 then
        local proj = vmath.project(self.correction, message.normal * message.distance)
        if proj < 1 then
            local comp = (message.distance - message.distance * proj) * message.normal
            go.set_position(go.get_position() + comp)
        end
    end
    
    if message.normal.x ~= 0 then self.move.x = self.move.x / 2 end
    if message.normal.y ~= 0 then self.move.y = self.move.y / 2 end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		resolve(self, message)
	elseif message_id == hash("position") then
		go.set_position(message.pos)
	end
end

function on_input(self, action_id, action)
	if data.state == data.STATE_GETREADY then
		if action_id == hash("action") and action.pressed then
			data.state = data.STATE_PLAYING
			msg.post("view#gui", "clear_message", {})
		end
	elseif data.state == data.STATE_PLAYING then
		if action_id == hash("left") then
			self.move.x = self.move.x - ACCEL
		elseif action_id == hash("right") then
			self.move.x = self.move.x + ACCEL
		end
	
		if action_id == hash("up") then
			self.move.y = self.move.y + ACCEL
		elseif action_id == hash("down") then
			self.move.y = self.move.y - ACCEL
		end
		
		if action_id == hash("escape") and action.pressed then
			msg.post("view", "look_at", {position = vmath.vector3(0,0,0)})
	    	msg.post("main:/handler", "show_menu")
		elseif action_id == hash("skip") and action.pressed then
			data.blocks = 0
		end
	elseif data.state == data.STATE_GAMEOVER then
		if action_id == hash("action") and action.pressed then
			data.state = data.STATE_MENU
			msg.post("view", "look_at", {position = vmath.vector3(0,0,0)})			
	    	msg.post("main:/handler", "show_menu")
    	end	
	end
end

